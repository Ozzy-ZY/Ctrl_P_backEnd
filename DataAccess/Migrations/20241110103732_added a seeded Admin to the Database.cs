// <auto-generated />
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Infrastructure.Migrations
{
    /// <inheritdoc />
    public partial class addedaseededAdmintotheDatabase : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            // Check if the Admin user already exists before inserting it
            migrationBuilder.Sql(@"
                IF NOT EXISTS (SELECT 1 FROM [AspNetUsers] WHERE [Id] = 1)
                BEGIN
                    INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
                    VALUES (1, 0, N'505258fa-c238-44f9-9e70-6ec617792104', N'Admin@gmail.com', CAST(0 AS bit), CAST(0 AS bit), NULL, NULL, NULL, N'AQAAAAIAAYagAAAAEI/Mz/MSiXslOgbOUm8Tk09JnoF8eNvXacynXqq5IcbhSWm2QvhOgm+xDY/URasS6g==', NULL, CAST(0 AS bit), NULL, CAST(0 AS bit), N'Admin');
                END
            ");

            // Check if the Admin user already has a role before inserting it
            migrationBuilder.Sql(@"
                IF NOT EXISTS (SELECT 1 FROM [AspNetUserRoles] WHERE [RoleId] = 1 AND [UserId] = 1)
                BEGIN
                    INSERT INTO [AspNetUserRoles] ([RoleId], [UserId])
                    VALUES (1, 1);
                END
            ");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "AspNetUserRoles",
                keyColumns: new[] { "RoleId", "UserId" },
                keyValues: new object[] { 1, 1 });

            migrationBuilder.DeleteData(
                table: "AspNetUsers",
                keyColumn: "Id",
                keyValue: 1);
        }
    }
}
